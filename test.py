'''input
203956878356401977405765866929034577280193993314348263094772646453283062722701277632936616063144088173312372882677123879538709400158306567338328279154499698366071906766440037074217117805690872792848149112022286332144876183376326512083574821647933992961249917319836219304274280243803104015000563790123
531872289054204184185084734375133399408303613982130856645299464930952178606045848877129147820387996428175564228204785846141207532462936339834139412401975338705794646595487324365194792822189473092273993580587964571659678084484152603881094176995594813302284232006001752128168901293560051833646881436219
79899879
'''
from gmpy2 import mpz,gcd,invert,powmod

def RSA_encrypt(p,q,m):
	n = p*q
	phi = (p-1)*(q-1)
	for i in range(2,phi):
		if gcd(i,phi)==1:
			e = mpz(i)
			break
	d = invert(e,phi)
	c = (m**e)%n
	return (c,e,d,n)

p = mpz(input())
q = mpz(input())
m = mpz(input())
ans = RSA_encrypt(p,q,m)
print(ans[0])
print(ans[1])
print(ans[2])
print(ans[3])s